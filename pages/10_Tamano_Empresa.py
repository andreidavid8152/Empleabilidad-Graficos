import streamlit as st
import plotly.express as px
from utils.carga_datos import cargar_datos_empleabilidad
from utils.estilos import aplicar_tema_plotly, mostrar_tarjeta_nota
from utils.filtros import aplicar_filtros

aplicar_tema_plotly()
st.title("DistribuciÃ³n de Graduados por TamaÃ±o de Empresa")

# ðŸŒ€ Cargar datos
with st.spinner("Cargando datos..."):
    df_base = cargar_datos_empleabilidad()

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Preprocesamiento
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
df = df_base.copy()
df["Esta_empleado"] = df["SALARIO.1"].notnull() | df["RUCEMP.1"].notnull()
df = df[df["Esta_empleado"] & df["Cantidad de empleados"].notnull()]


# ClasificaciÃ³n por tamaÃ±o de empresa
def clasificar_tamano(n):
    if n <= 10:
        return "Microempresa (1â€“10)"
    elif n <= 50:
        return "PequeÃ±a (11â€“50)"
    elif n <= 200:
        return "Mediana (51â€“200)"
    else:
        return "Grande (200+)"


df["TamaÃ±o Empresa"] = df["Cantidad de empleados"].apply(clasificar_tamano)

# Mapeo de meses a trimestres
df["Trimestre"] = df["Mes.1"].map({2: "Q1", 5: "Q2", 9: "Q3", 11: "Q4"})

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# FILTROS (sin Trimestre en aplicar_filtros)
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
df_fil, selecciones = aplicar_filtros(
    df,
    incluir=[
        "Nivel",
        "Oferta Actual",
        "Facultad",
        "Carrera",
        "Cohorte",
        "Trabajo Formal",
    ],
)

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Filtro manual de Trimestre (debajo de Trabajo Formal)
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
opciones_trimestre = ["Todos", "Q1", "Q2", "Q3", "Q4"]
trimestre_sel = st.selectbox(
    "Trimestre",
    opciones_trimestre,
    index=(
        0
        if "Trimestre" not in selecciones
        else opciones_trimestre.index(selecciones["Trimestre"])
    ),
)
if trimestre_sel != "Todos":
    df_fil = df_fil[df_fil["Trimestre"] == trimestre_sel]

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# CÃ¡lculo de empleados Ãºnicos y porcentajes
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
if df_fil.empty:
    st.warning("No hay datos disponibles con los filtros seleccionados.")
else:
    # Reducir a un registro por graduado:
    #   - primero ordena por Mes.1 desc (o el trimestre seleccionado)
    #   - luego dentro del mismo mes por SALARIO.1 desc (salario mÃ¡s alto)
    df_emp_unicos = df_fil.sort_values(
        ["IdentificacionBanner.1", "Mes.1", "SALARIO.1"], ascending=[True, False, False]
    ).drop_duplicates(subset="IdentificacionBanner.1", keep="first")

    # Conteo absoluto por tamaÃ±o de empresa
    conteo = (
        df_emp_unicos["TamaÃ±o Empresa"]
        .value_counts()
        .reindex(
            [
                "Microempresa (1â€“10)",
                "PequeÃ±a (11â€“50)",
                "Mediana (51â€“200)",
                "Grande (200+)",
            ]
        )
        .dropna()
        .reset_index()
    )
    conteo.columns = ["TamaÃ±o Empresa", "NÃºmero de Graduados"]

    # Porcentaje sobre total de graduados Ãºnicos considerados
    total_unicos = df_emp_unicos["IdentificacionBanner.1"].nunique()
    conteo["PorcentajeTexto"] = (
        conteo["NÃºmero de Graduados"] / total_unicos * 100
    ).round(2).astype(str) + "%"

    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    # GrÃ¡fico de barras
    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    fig = px.bar(
        conteo,
        x="TamaÃ±o Empresa",
        y="NÃºmero de Graduados",
        color="TamaÃ±o Empresa",
        text="PorcentajeTexto",
        hover_data={"NÃºmero de Graduados": True, "PorcentajeTexto": False},
        title="DistribuciÃ³n de Graduados por TamaÃ±o de Empresa",
    )
    fig.update_layout(
        xaxis={
            "categoryorder": "array",
            "categoryarray": [
                "Microempresa (1â€“10)",
                "PequeÃ±a (11â€“50)",
                "Mediana (51â€“200)",
                "Grande (200+)",
            ],
        },
        showlegend=False,
        yaxis_title="NÃºmero de Graduados",
    )
    fig.update_traces(textposition="inside")

    st.plotly_chart(fig, use_container_width=True)

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Nota explicativa
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
mostrar_tarjeta_nota(
    texto_principal="""
    <strong>ðŸ“Œ Nota:</strong><br>
    ClasificaciÃ³n de empleadores segÃºn nÃºmero de afiliados (micro, pequeÃ±a, mediana, grande).
    """,
    nombre_filtro="Trabajo Formal",
    descripcion_filtro="""
    <strong>RelaciÃ³n de Dependencia:</strong> Graduados con contrato formal.<br>
    <strong>AfiliaciÃ³n Voluntaria:</strong> Independientes/emprendedores.<br>
    <strong>Desconocido:</strong> Sin registro formal de empleo.
    """,
)
