import streamlit as st
import plotly.express as px
from utils.carga_datos import cargar_datos_empleabilidad
from utils.estilos import aplicar_tema_plotly, mostrar_tarjeta_nota
from utils.filtros import aplicar_filtros

aplicar_tema_plotly()
st.title("DistribuciÃ³n de Graduados por el TamaÃ±o de la Empresa")

# ðŸŒ€ Cargar datos
with st.spinner("Cargando datos..."):
    df_base = cargar_datos_empleabilidad()

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Preprocesamiento
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
df = df_base.copy()
df["Esta_empleado"] = df["SALARIO.1"].notnull() | df["RUCEMP.1"].notnull()
df = df[df["Esta_empleado"] & df["Cantidad de empleados"].notnull()]


# ClasificaciÃ³n por tamaÃ±o de empresa
def clasificar_tamano(n):
    if n <= 10:
        return "Microempresa (1â€“10)"
    elif n <= 50:
        return "PequeÃ±a (11â€“50)"
    elif n <= 200:
        return "Mediana (51â€“200)"
    else:
        return "Grande (200+)"


df["TamaÃ±o Empresa"] = df["Cantidad de empleados"].apply(clasificar_tamano)

# Mapeo de meses a trimestres
df["Trimestre"] = df["Mes.1"].map({2: "Q1", 5: "Q2", 9: "Q3", 11: "Q4"})

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# FILTROS (sin Trimestre en aplicar_filtros)
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
df_fil, selecciones = aplicar_filtros(
    df,
    incluir=[
        "Nivel",
        "Oferta Actual",
        "Facultad",
        "Carrera",
        "Cohorte",
        "Trabajo Formal",
    ],
)

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Filtro manual de Trimestre
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
opciones_trimestre = ["Todos", "Q1", "Q2", "Q3", "Q4"]
trimestre_sel = st.selectbox(
    "Trimestre",
    opciones_trimestre,
    index=(
        0
        if "Trimestre" not in selecciones
        else opciones_trimestre.index(selecciones["Trimestre"])
    ),
)
if trimestre_sel != "Todos":
    df_fil = df_fil[df_fil["Trimestre"] == trimestre_sel]

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# CÃ¡lculo de empleados Ãºnicos y porcentajes
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
if df_fil.empty:
    st.warning("No hay datos disponibles con los filtros seleccionados.")
else:
    # Reducir a un registro por graduado
    df_emp_unicos = df_fil.sort_values(
        ["IdentificacionBanner.1", "Mes.1", "SALARIO.1"],
        ascending=[True, False, False],
    ).drop_duplicates(subset="IdentificacionBanner.1", keep="first")

    # Conteo absoluto por tamaÃ±o de empresa
    conteo = (
        df_emp_unicos["TamaÃ±o Empresa"]
        .value_counts()
        .reindex(
            [
                "Microempresa (1â€“10)",
                "PequeÃ±a (11â€“50)",
                "Mediana (51â€“200)",
                "Grande (200+)",
            ]
        )
        .dropna()
        .reset_index()
    )
    conteo.columns = ["TamaÃ±o Empresa", "NÃºmero de Graduados"]

    # Porcentaje sobre total de graduados Ãºnicos
    total_unicos = df_emp_unicos["IdentificacionBanner.1"].nunique()
    conteo["PorcentajeTexto"] = (
        conteo["NÃºmero de Graduados"] / total_unicos * 100
    ).round(2).astype(str) + "%"

    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    # Insight card dinÃ¡mico
    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    top_row = conteo.loc[conteo["NÃºmero de Graduados"].idxmax()]
    tipo_raw = top_row["TamaÃ±o Empresa"].split(" (")[
        0
    ]  # "Microempresa", "PequeÃ±a", etc.
    num_graduados_top = int(top_row["NÃºmero de Graduados"])
    tipo_lower = tipo_raw.lower()

    # Frase adicional segÃºn la categorÃ­a principal
    if tipo_raw == "Grande":
        frase_extra = (
            "Aunque las grandes empresas lideran, tambiÃ©n hay presencia "
            "relevante en otros tamaÃ±os."
        )
    elif tipo_raw == "Microempresa":
        frase_extra = (
            "A pesar de su predominio, muchos graduados tambiÃ©n se desempeÃ±an "
            "en empresas de mayor tamaÃ±o."
        )
    elif tipo_raw == "PequeÃ±a":
        frase_extra = (
            "Las pequeÃ±as empresas destacan como principal empleador, "
            "aunque no son la Ãºnica opciÃ³n."
        )
    elif tipo_raw == "Mediana":
        frase_extra = (
            "Las empresas medianas son la opciÃ³n dominante, "
            "pero existe reparto significativo en extremos."
        )
    else:
        frase_extra = ""

    texto_insight = (
        f"ðŸ“Š<strong>{num_graduados_top} de cada {total_unicos} graduados</strong> con empleo formal "
        f"trabaja en {tipo_lower}. {frase_extra}"
    )

    st.markdown(
        f"""
        <div style="
            background-color: #fdf0f6;
            border-left: 6px solid #d8b4e2;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        ">
            <p style="margin: 0; font-size: 1.05rem;">
                {texto_insight}
            </p>
        </div>
        """,
        unsafe_allow_html=True,
    )

    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    # GrÃ¡fico de barras
    # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
    fig = px.bar(
        conteo,
        x="TamaÃ±o Empresa",
        y="NÃºmero de Graduados",
        color="TamaÃ±o Empresa",
        text="PorcentajeTexto",
        hover_data={"NÃºmero de Graduados": True, "PorcentajeTexto": False},
        title="DistribuciÃ³n de Graduados por TamaÃ±o de Empresa",
    )
    fig.update_layout(
        xaxis={
            "categoryorder": "array",
            "categoryarray": [
                "Microempresa (1â€“10)",
                "PequeÃ±a (11â€“50)",
                "Mediana (51â€“200)",
                "Grande (200+)",
            ],
        },
        showlegend=False,
        yaxis_title="NÃºmero de Graduados",
    )
    fig.update_traces(textposition="inside")
    st.plotly_chart(fig, use_container_width=True)

# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
# Nota explicativa
# â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
mostrar_tarjeta_nota(
    texto_principal="""
    <strong>ðŸ“Œ Nota aclaratoria:</strong><br>
    Esta visualizaciÃ³n muestra la distribuciÃ³n de graduados con empleo formal segÃºn el tamaÃ±o de la empresa en la que estÃ¡n trabajando, clasificada por nÃºmero de trabajadores registrados:<br>
    <ul>
      <li><strong>Microempresa:</strong> 1 a 10 afiliados</li>
      <li><strong>PequeÃ±a empresa:</strong> 11 a 50 afiliados</li>
      <li><strong>Mediana empresa:</strong> 51 a 200 afiliados</li>
      <li><strong>Gran empresa:</strong> mÃ¡s de 200 afiliados</li>
    </ul>
    Los porcentajes en las barras indican la proporciÃ³n de graduados que trabajan en empresas de cada tamaÃ±o.
    """
)
